I am file// implementation -> files/folder interact
// /directory
// files -> read /write /update delete
let fs=require("fs") ;
// let content=fs.readFileSync("f1.txt") ;
// buffer -> video, audio, text 
// console.log("content : ",content)
// +- -> concatinate -> string  => text
// console.log('content : '+ content)
// wrtie -> writeFileSync
// file does not exist -> file create, content put 
// file does exist -> content override
// fs.writeFileSync("abc.txt","Hi i am a new file") ;
// update 
// fs.appendFileSync("abc.txt",'Update the file') ;
// delete a file by passing it's path
// fs.unlinkSync("abc.txt") ;
// console.log("file removed") ;


// ******************** directory *****************************
// create
// fs.mkdirSync('myDir') ;
// delete
// fs.rmdirSync('myDir') ;
// path -> does it exist or not
// let doesExist=fs.existsSync('fs.js')
// console.log("This path exist ?",doesExist) ;
// path -> belongs to a folder or a file
// let statsOfAPath=fs.lstatSync('dir1')
// console.log("stats",statsOfAPath) ;
// console.log("isFile? ", statsOfAPath.isFile())
// console.log("isDirectory? ",statsOfAPath.isDirectory()) ;
// directory -> content
let address="C:\\Users\\welcome\\Desktop\\pp12\\Lecture3"
let content=fs.readdirSync(address)
console.log("directory content",content)
let path=require("path")
let fs=require("fs")
// path.join()
// input
let inputArr=process.argv.slice(2) ;
console.log(inputArr) ;
let fileName=inputArr[0]
let content=inputArr[1]
console.log("fileName",fileName)
console.log("content",content)
// current path of directory
let currentPath=process.cwd()
console.log("currentPath ",currentPath)
// path -> paths -> platform independent
let joinedPath=path.join(currentPath,"abc","def","efg")
console.log("joinedPath",joinedPath)
let filePath=path.join(currentPath,"dir1",fileName) ;
console.log("filePath ",filePath) ;
fs.writeFileSync(filePath,content) ;





let path=require("path")
let fs=require("fs")
let inputArr=process.argv.slice(2) ;
let mainDir=inputArr[0] ;
let cwd=process.cwd() ;
let mainDirPath=path.join(cwd,mainDir)
let isMainModulePresent=fs.existsSync(mainDirPath)
if(isMainModulePresent){
    console("Directory is already present") ;
    return ;
}
else {
    console.log(mainDir," created") ;
    fs.mkdirSync(mainDirPath) ;
    let topicFromInput=inputArr.slice(1,4) ;
    for(let i=0;i<topicFromInput.length;i++){
        let cTopicPath=path.join(mainDirPath,topicFromInput[i]) ;
        console.log(topicFromInput[i]," created") ;
        fs.mkdirSync(cTopicPath)
        for(let j=1;j<=5;j++){
            let modulePath=path.join(cTopicPath,"Module"+j) ;
            fs.mkdirSync(modulePath) ;
            console.log("Module"+j,"created inside ",topicFromInput[i]) ;
            let filePath=path.join(modulePath,"content.md") ;
            fs.writeFileSync(filePath,"# Hello") ;
        }
    }
}



let path=require("path")
let fs=require("fs")
let inputArr=process.argv.slice(2) ;
let mainDir=inputArr[0] ;
let n=inputArr[1]
let cwd=process.cwd() ;
let mainDirPath=path.join(cwd,mainDir)
let isMainModulePresent=fs.existsSync(mainDirPath)
if(isMainModulePresent){
    console("Directory is already present") ;
    return ;
}
else  {
     console.log(mainDir," created") ;
    fs.mkdirSync(mainDirPath) ;
    let topicFromInput=inputArr.slice(2,n+1) ;
    for(let i=0;i<topicFromInput.length;i++){
        let cTopicPath=path.join(mainDirPath,topicFromInput[i]) ;
        console.log(topicFromInput[i]," created") ;
        fs.mkdirSync(cTopicPath)
        for(let j=1;j<=5;j++){
            let modulePath=path.join(cTopicPath,"Module"+j) ;
            fs.mkdirSync(modulePath) ;
            console.log("Module"+j,"created inside ",topicFromInput[i]) ;
            let filePath=path.join(modulePath,"content.md") ;
            fs.writeFileSync(filePath,"# Hello") ;
        }
    }
}